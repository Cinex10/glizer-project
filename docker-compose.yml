version: '3.8'

services:
  # Redis service for RQ job queue
  redis:
    platform: linux/amd64
    image: redis:7-alpine
    container_name: yalla_ludo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - yalla_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main FastAPI application
  api:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yalla_ludo_api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data  # For SQLite database persistence
    env_file:
      - .env
    environment:
      - DATABASE_URL=sqlite:///./data/transactions.db
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - yalla_network
    restart: unless-stopped
    command: python src/main.py

  # Webhook service
  webhook:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yalla_ludo_webhook
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - yalla_network
    restart: unless-stopped
    command: python webhook.py

  # RQ Worker for background job processing
  worker:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yalla_ludo_worker
    volumes:
      - .:/app
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - yalla_network
    restart: unless-stopped
    command: python worker.py

  # Optional: RQ Dashboard for monitoring jobs
  # rq-dashboard:
  #   image: eoranged/rq-dashboard
  #   container_name: yalla_ludo_rq_dashboard
  #   ports:
  #     - "9181:9181"
  #   env_file:
  #     - .env
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - yalla_network
  #   restart: unless-stopped

volumes:
  redis_data:
  app_data:

networks:
  yalla_network:
    driver: bridge 